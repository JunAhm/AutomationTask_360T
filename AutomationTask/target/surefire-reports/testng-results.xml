<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="0" total="11" passed="9" failed="2" skipped="0">
  <reporter-output>
  </reporter-output>
  <suite started-at="2024-12-21T20:56:16 IST" name="Test Suite" finished-at="2024-12-21T20:56:17 IST" duration-ms="599">
    <groups>
    </groups>
    <test started-at="2024-12-21T20:56:16 IST" name="Telephone Dial Pad Test" finished-at="2024-12-21T20:56:17 IST" duration-ms="599">
      <class name="com.dto.test.TelephoneDialPadTest">
        <test-method signature="testRetrieveCombinations(java.lang.String,java.util.List)[pri:1, instance:com.dto.test.TelephoneDialPadTest@76908cc0]" started-at="2024-12-21T20:56:17 IST" name="testRetrieveCombinations" description="Validate combinations from JSON" data-provider="testDataFromJson" finished-at="2024-12-21T20:56:17 IST" duration-ms="20" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[1]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testRetrieveCombinations -->
        <test-method signature="testRetrieveCombinations(java.lang.String,java.util.List)[pri:1, instance:com.dto.test.TelephoneDialPadTest@76908cc0]" started-at="2024-12-21T20:56:17 IST" name="testRetrieveCombinations" description="Validate combinations from JSON" data-provider="testDataFromJson" finished-at="2024-12-21T20:56:17 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[23]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[AD, AE, AF, BD, BE, BF, CD, CE, CF]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testRetrieveCombinations -->
        <test-method signature="testRetrieveCombinations(java.lang.String,java.util.List)[pri:1, instance:com.dto.test.TelephoneDialPadTest@76908cc0]" started-at="2024-12-21T20:56:17 IST" name="testRetrieveCombinations" description="Validate combinations from JSON" data-provider="testDataFromJson" finished-at="2024-12-21T20:56:17 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[234]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[ADG, ADH, ADI, AEG, AEH, AEI, AFG, AFH, AFI, BDG, BDH, BDI, BEG, BEH, BEI, BFG, BFH, BFI, CDG, CDH, CDI, CEG, CEH, CEI, CFG, CFH, CFI]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testRetrieveCombinations -->
        <test-method signature="testRetrieveCombinations(java.lang.String,java.util.List)[pri:1, instance:com.dto.test.TelephoneDialPadTest@76908cc0]" started-at="2024-12-21T20:56:17 IST" name="testRetrieveCombinations" description="Validate combinations from JSON" data-provider="testDataFromJson" finished-at="2024-12-21T20:56:17 IST" duration-ms="8" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA[567]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[JMJ, JMK, JML, JNK, JNL, JNM, JOK, JOL, JOM, KMJ, KMK, KML, KNK, KNL, KNM, KOK, KOL, KOM, LMJ, LMK, LML, LNK, LNL, LNM, LOK, LOL, LOM]]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[Mismatch for input: 567 actual =[JMP, JMQ, JMR, JMS, JNP, JNQ, JNR, JNS, JOP, JOQ, JOR, JOS, KMP, KMQ, KMR, KMS, KNP, KNQ, KNR, KNS, KOP, KOQ, KOR, KOS, LMP, LMQ, LMR, LMS, LNP, LNQ, LNR, LNS, LOP, LOQ, LOR, LOS]expected from json = [JMJ, JMK, JML, JNK, JNL, JNM, JOK, JOL, JOM, KMJ, KMK, KML, KNK, KNL, KNM, KOK, KOL, KOM, LMJ, LMK, LML, LNK, LNL, LNM, LOK, LOL, LOM]: lists don't have the same size expected [27] but found [36]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: Mismatch for input: 567 actual =[JMP, JMQ, JMR, JMS, JNP, JNQ, JNR, JNS, JOP, JOQ, JOR, JOS, KMP, KMQ, KMR, KMS, KNP, KNQ, KNR, KNS, KOP, KOQ, KOR, KOS, LMP, LMQ, LMR, LMS, LNP, LNQ, LNR, LNS, LOP, LOQ, LOR, LOS]expected from json = [JMJ, JMK, JML, JNK, JNL, JNM, JOK, JOL, JOM, KMJ, KMK, KML, KNK, KNL, KNM, KOK, KOL, KOM, LMJ, LMK, LML, LNK, LNL, LNM, LOK, LOL, LOM]: lists don't have the same size expected [27] but found [36]
at org.testng.Assert.fail(Assert.java:111)
at org.testng.Assert.failNotEquals(Assert.java:1578)
at org.testng.Assert.assertEqualsImpl(Assert.java:150)
at org.testng.Assert.assertEquals(Assert.java:132)
at org.testng.Assert.assertEquals(Assert.java:1419)
at org.testng.Assert.assertEquals(Assert.java:1383)
at org.testng.Assert.assertEquals(Assert.java:1630)
at com.dto.test.TelephoneDialPadTest.testRetrieveCombinations(TelephoneDialPadTest.java:39)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:141)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:686)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:230)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:63)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:992)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:203)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:154)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:134)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:739)
at org.testng.TestRunner.run(TestRunner.java:614)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:421)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:413)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:373)
at org.testng.SuiteRunner.run(SuiteRunner.java:312)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1274)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1208)
at org.testng.TestNG.runSuites(TestNG.java:1112)
at org.testng.TestNG.run(TestNG.java:1079)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:308)
at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:71)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:113)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:385)
at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:162)
at org.apache.maven.surefire.booter.ForkedBooter.run(ForkedBooter.java:507)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:495)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testRetrieveCombinations -->
        <test-method signature="testRetrieveCombinations(java.lang.String,java.util.List)[pri:1, instance:com.dto.test.TelephoneDialPadTest@76908cc0]" started-at="2024-12-21T20:56:17 IST" name="testRetrieveCombinations" description="Validate combinations from JSON" data-provider="testDataFromJson" finished-at="2024-12-21T20:56:17 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[78]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[PT, PU, PV, QT, QU, QV, RT, RU, RV, ST, SU, SV]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testRetrieveCombinations -->
        <test-method signature="testRetrieveCombinations(java.lang.String,java.util.List)[pri:1, instance:com.dto.test.TelephoneDialPadTest@76908cc0]" started-at="2024-12-21T20:56:17 IST" name="testRetrieveCombinations" description="Validate combinations from JSON" data-provider="testDataFromJson" finished-at="2024-12-21T20:56:17 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[90]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[W0, X0, Y0, Z0]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testRetrieveCombinations -->
        <test-method signature="testRetrieveCombinations(java.lang.String,java.util.List)[pri:1, instance:com.dto.test.TelephoneDialPadTest@76908cc0]" started-at="2024-12-21T20:56:17 IST" name="testRetrieveCombinations" description="Validate combinations from JSON" data-provider="testDataFromJson" finished-at="2024-12-21T20:56:17 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[2]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[A, B, C]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testRetrieveCombinations -->
        <test-method signature="testRetrieveCombinations(java.lang.String,java.util.List)[pri:1, instance:com.dto.test.TelephoneDialPadTest@76908cc0]" started-at="2024-12-21T20:56:17 IST" name="testRetrieveCombinations" description="Validate combinations from JSON" data-provider="testDataFromJson" finished-at="2024-12-21T20:56:17 IST" duration-ms="2" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA[345]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[DGL, DGM, DGN, DHL, DHM, DHN, DIL, DIM, DIN, EGL, EGM, EGN, EHL, EHM, EHN, EIL, EIM, EIN, FGL, FGM, FGN, FHL, FHM, FHN, FIL, FIM, FIN]]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[Mismatch for input: 345 actual =[DGJ, DGK, DGL, DHJ, DHK, DHL, DIJ, DIK, DIL, EGJ, EGK, EGL, EHJ, EHK, EHL, EIJ, EIK, EIL, FGJ, FGK, FGL, FHJ, FHK, FHL, FIJ, FIK, FIL]expected from json = [DGL, DGM, DGN, DHL, DHM, DHN, DIL, DIM, DIN, EGL, EGM, EGN, EHL, EHM, EHN, EIL, EIM, EIN, FGL, FGM, FGN, FHL, FHM, FHN, FIL, FIM, FIN]: Lists differ at element [0]: DGL != DGJ expected [DGL] but found [DGJ]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: Mismatch for input: 345 actual =[DGJ, DGK, DGL, DHJ, DHK, DHL, DIJ, DIK, DIL, EGJ, EGK, EGL, EHJ, EHK, EHL, EIJ, EIK, EIL, FGJ, FGK, FGL, FHJ, FHK, FHL, FIJ, FIK, FIL]expected from json = [DGL, DGM, DGN, DHL, DHM, DHN, DIL, DIM, DIN, EGL, EGM, EGN, EHL, EHM, EHN, EIL, EIM, EIN, FGL, FGM, FGN, FHL, FHM, FHN, FIL, FIM, FIN]: Lists differ at element [0]: DGL != DGJ expected [DGL] but found [DGJ]
at org.testng.Assert.fail(Assert.java:111)
at org.testng.Assert.failNotEquals(Assert.java:1578)
at org.testng.Assert.assertEqualsImpl(Assert.java:150)
at org.testng.Assert.assertEquals(Assert.java:1644)
at com.dto.test.TelephoneDialPadTest.testRetrieveCombinations(TelephoneDialPadTest.java:39)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:141)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:686)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:230)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:63)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:992)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:203)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:154)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:134)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:739)
at org.testng.TestRunner.run(TestRunner.java:614)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:421)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:413)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:373)
at org.testng.SuiteRunner.run(SuiteRunner.java:312)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1274)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1208)
at org.testng.TestNG.runSuites(TestNG.java:1112)
at org.testng.TestNG.run(TestNG.java:1079)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:308)
at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:71)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:113)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:385)
at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:162)
at org.apache.maven.surefire.booter.ForkedBooter.run(ForkedBooter.java:507)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:495)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testRetrieveCombinations -->
        <test-method signature="testRetrieveCombinations(java.lang.String,java.util.List)[pri:1, instance:com.dto.test.TelephoneDialPadTest@76908cc0]" started-at="2024-12-21T20:56:17 IST" name="testRetrieveCombinations" description="Validate combinations from JSON" data-provider="testDataFromJson" finished-at="2024-12-21T20:56:17 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[89]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[TW, TX, TY, TZ, UW, UX, UY, UZ, VW, VX, VY, VZ]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testRetrieveCombinations -->
        <test-method signature="testInvalidInput()[pri:2, instance:com.dto.test.TelephoneDialPadTest@76908cc0]" started-at="2024-12-21T20:56:17 IST" name="testInvalidInput" description="Test invalid input scenarios" finished-at="2024-12-21T20:56:17 IST" duration-ms="5" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testInvalidInput -->
        <test-method signature="testNullInput()[pri:3, instance:com.dto.test.TelephoneDialPadTest@76908cc0]" started-at="2024-12-21T20:56:17 IST" name="testNullInput" description="Test null input scenario" finished-at="2024-12-21T20:56:17 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testNullInput -->
      </class> <!-- com.dto.test.TelephoneDialPadTest -->
    </test> <!-- Telephone Dial Pad Test -->
  </suite> <!-- Test Suite -->
</testng-results>
